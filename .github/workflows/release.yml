name: Release
on:
  release:
    types: [published]
env:
  GIT_USER_NAME: 'grails-build'
  GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Wrapper Integrity
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Java
        uses: actions/setup-java@v4
        with: { java-version: 17, distribution: temurin }
      - name: Get the current release version
        id: Set the current release version
        run: echo "release_version=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: Tag the release version
        uses: micronaut-projects/github-actions/pre-release@master
      - name: Generate secring file
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg
      - name: Publish to Sonatype
        id: publish_to_sonatype
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeStagingProfileId: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
        with:
          arguments: |
            -Psigning.secretKeyRingFile=${{ github.workspace }}/secring.gpg
            publishToSonatype
            closeAndReleaseSonatypeStagingRepository
      - name: Generate Documentation
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: docs
      - name: Publish Documentation to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BRANCH: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          FOLDER: build/docs
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SKIP_SNAPSHOT: ${{ contains(steps.release_version.outputs.release_version, 'M') }}
          VERSION: ${{ steps.release_version.outputs.release_version }}
      - name: Run post-release
        if: steps.publish_to_sonatype.outcome == 'success'
        uses: micronaut-projects/github-actions/post-release@master